.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "KADNODE" "1" "September 2013" "" ""
.
.SH "NAME"
\fBkadnode\fR \- P2P name resolution daemon
.
.SH "SYNOPSIS"
\fBkadnode\fR [\-\-id hostname] [\-\-port port] [\-\-daemon] [\.\.\.]
.
.P
\fBkadnode\-ctl\fR [\.\.\.]
.
.SH "DESCRIPTION"
\fBKadNode\fR is a small P2P name/resource resolution daemon for IPv4/IPv6 based on a distributed hash table (DHT)\. The implementation is identical to the one used for the Transmission Bittorrent client\.
.
.P
KadNode enables the user to announce any kind of resource by an identifier\. This can be used e\.g\. to resolve a hostname to an IP address\. It is also small in size (~75KB) and uses only one thread to save resources\. Join any existing swarm to be able to find your node globally\.
.
.P
By default, KadNode tries to send a ping to a multicast address on the local network to find nodes to bootstrap from\. This is done every five minutes when no other nodes are known\. The interactive remote shell \fBkadnode\-ctl\fR let the user import and export nodes, issue queries for identifiers and send announcements\.
.
.P
As an usage example one would start \fBkadnode \-\-value\-id myname\.p2p\fR to let KadNode announce every 30 minutes, that the IP address of the running KadNode instance is associated with the identifier \'myname\.p2p\'\. A call like \fBkadnode\-ctl import bttracker\.debian\.org\fR can be used to help KadNode to bootstrap into an existing network\. To announce an identifier just once, use \fBkadnode\-ctl announce myname\fR\. Any announcement will be dropped by other KadNode instances after 32 minutes and therefore need to be refreshed around every 30 minutes\.
.
.P
Please be aware that other people might use the same identifier\. It is strongly advised to do additional identification/authentification when an address is used that has been resolved by KadNode\. The DNS/NSS interfaces are only able to return one of these addresses\. In contrast, the web and console interface are able to return all known IP addresses associated with an identifier\.
.
.P
Every entered identifier (e\.g\. \fBmyname\.p2p\fR) will have everything after and including the last dot ignored\. This is because the top level domain is often used to differentiate from classical domain names and to redirect requests to KadNode\. The rest of the string is converted to an 20 byte identifier using the SHA1 hashing algorithm\. As an alternative, the hash can be entered directly as a 40 character hexadecimal string\. The string \fBmyname\.p2p\fR is therefore eqivalent to \fBd13b93ea42804188d277c20f7d6e5be2732148b8\fR which is the result of SHA1(\'myname\')\. The use of the build\-in hashing algorithm can be entirely circumvented this way\.
.
.SH "INTERFACES"
.
.IP "\(bu" 4
An interactive shell to issue queries and manage the DHT\. Useful for shell scripts: \fBkadnode\-ctl search myname\.p2p\fR
.
.IP "\(bu" 4
Name Service Switch (NSS) support through /etc/nsswitch\.conf\.
.
.IP "\(bu" 4
A simple DNS server interface that can be used like a local upstream DNS server\.
.
.IP "\(bu" 4
A simple web server interface to resolve queries: \fBhttp://localhost:8053/search?foo\.p2p\fR
.
.IP "" 0
.
.P
All these interfaces listen only for connections from localhost\.
.
.SH "OPTIONS"
.
.IP "\(bu" 4
\fB\-\-node\-id\fR \fIid\fR
.
.br
Set the node identifier\. This option is rarely needed\.
.
.br
By default the node id is random\.
.
.IP "\(bu" 4
\fB\-\-value\-id\fR \fIid[:port]\fR
.
.br
Add a value identifier and optional port to be announced every 30 minutes\.
.
.br
The announcement will associate this nodes IP address with this identifier\.
.
.br
This option can occur multiple times\.
.
.IP "\(bu" 4
\fB\-\-peerfile\fR \fIfile\-path\fR
.
.br
Import peers for bootstrapping and write good peers to this file on shutdown\.
.
.IP "\(bu" 4
\fB\-\-user\fR \fIname\fR
.
.br
Change the UUID after start\.
.
.IP "\(bu" 4
\fB\-\-port\fR \fIport\fR
.
.br
Bind the DHT to this port\.
.
.br
Default: 6881
.
.IP "\(bu" 4
\fB\-\-ifce\fR \fIinterface\fR
.
.br
Bind to this specific interface\.
.
.IP "\(bu" 4
\fB\-\-mcast\-addr\fR \fIaddress\fR
.
.br
Send pings to this multicast address as long no nodes were found\.
.
.br
Default: 239\.192\.202\.7:6771 / [ff08:ca:07::]:6771
.
.IP "\(bu" 4
\fB\-\-disable\-forwarding\fR
.
.br
Disable UPnP/NAT\-PMP to forward router ports\.
.
.IP "\(bu" 4
\fB\-\-disable\-multicast\fR
.
.br
Disable multicast to discover local nodes\.
.
.IP "\(bu" 4
\fB\-\-daemon\fR
.
.br
Run in background\.
.
.IP "\(bu" 4
\fB\-\-verbosity\fR
.
.br
Verbosity level: quiet, verbose or debug (Default: verbose)\.
.
.IP "\(bu" 4
\fB\-\-pidfile\fR \fIfile\-path\fR
.
.br
Write process pid to a file\.
.
.IP "\(bu" 4
\fB\-\-cmd\-port\fR \fIport\fR
.
.br
Bind the remote control interface to this local port (Default: 1700)\.
.
.IP "\(bu" 4
\fB\-\-dns\-port\fR \fIport\fR
.
.br
Bind the DNS server to this local port (Default: 5353)\.
.
.IP "\(bu" 4
\fB\-\-nss\-port\fR \fIport\fR
.
.br
Bind the "Network Service Switch" to this local port (Default: 4053)\.
.
.IP "\(bu" 4
\fB\-\-web\-port\fR \fIport\fR
.
.br
Bind the web server to this local port (Default: 8053)\.
.
.IP "\(bu" 4
\fB\-\-mode\fR \fIprotocol\fR
.
.br
Enable IPv4 or IPv6 mode for the DHT (Default: ipv4)\.
.
.IP "\(bu" 4
\fB\-h\fR, \fB\-\-help\fR
.
.br
Print the list of accepted options\.
.
.IP "\(bu" 4
\fB\-v\fR, \fB\-\-version\fR
.
.br
Print program version and included features\.
.
.IP "" 0
.
.SS "kadnode\-ctl"
\fBkadnode\-ctl\fR allows to control KadNode from the command line\.
.
.IP "\(bu" 4
\fB\-p\fR \fIport\fR
.
.br
Connect to the local KadNode console on this interface (Default: 1700)\.
.
.IP "\(bu" 4
\fB\-h\fR
.
.br
Print this help\.
.
.IP "" 0
.
.IP "\(bu" 4
\fBstatus\fR
.
.br
Print the node id, the number of known nodes / searches / stored hashes and more\.
.
.IP "\(bu" 4
\fBsearch\fR \fIid\fR
.
.br
Start a search for nodes closest to the given identifier id\.
.
.IP "\(bu" 4
\fBlookup\fR \fIid\fR
.
.br
Lookup the IP addresses of all nodes that claim to satisfy the identifier\.
.
.br
The lookup is performed on the current search results\.
.
.IP "\(bu" 4
\fBannounce\fR \fIid\fR [\fI\fIport\fR\fR] [\fI\fIminutes\fR\fR]
.
.br
Announce that this instance is associated with identifier
.
.br
and an optional port\. The default port is 1 (0 is for announces)\.
.
.br
The announcement will happen only once unless a time
.
.br
in minutes is given or \-1 minutes for the entire runtime\.
.
.IP "\(bu" 4
\fBimport\fR \fIaddr\fR
.
.br
Send a ping to another KadNode instance to establish a connection\.
.
.IP "\(bu" 4
\fBexport\fR
.
.br
Print a few good nodes\.
.
.IP "\(bu" 4
\fBblacklist\fR \fIaddr\fR
.
.br
Blacklist a specifc IP address\.
.
.IP "\(bu" 4
\fBshutdown\fR
.
.br
Shutdown the daemon\.
.
.IP "" 0
.
.SH "Web Interface"
The web interface allows queries of these forms:
.
.IP "\(bu" 4
\fBhttp://localhost:8053/search?foo\.p2p\fR
.
.IP "\(bu" 4
\fBhttp://localhost:8053/announce?foobar\fR
.
.IP "\(bu" 4
\fBhttp://localhost:8053/blacklist?1\.2\.3\.4\fR
.
.IP "" 0
.
.P
If the interface cannot be reached then the interface might be disabled (port set to 0) or not compiled in (check \fBkadnode \-\-version\fR)\. In case the IPv6 entry for localhost is not used or missing, try \fB[::1]\fR instead of \fBlocalhost\fR\.
.
.SH "LIMITATIONS"
.
.IP "\(bu" 4
Blacklisted addreses are stored in a LRU cache of maximal 10 entries\.
.
.IP "" 0
.
.SH "LICENSE"
MIT/X11
.
.SH "AUTHORS"
.
.IP "\(bu" 4
KadNode: Moritz Warning (http://github\.com/mwarning)
.
.IP "\(bu" 4
Kademlia: Juliusz Chroboczek
.
.IP "\(bu" 4
SHA1: Steve Reid
.
.IP "" 0

